# 
msgid ""
msgstr ""
"Project-Id-Version: pgRouting v2.5.0-alpha\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-08-26 16:13-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../build/doc/dijkstra-family.rst:13
msgid "Dijkstra - Family of functions"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:17
msgid ":ref:`pgr_dijkstra` - Dijkstra's algorithm for the shortest paths."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:18
msgid ""
":ref:`pgr_dijkstraCost` - Get the aggregate cost of the shortest paths."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:19
msgid ""
":ref:`pgr_dijkstraCostMatrix` - Use pgr_dijkstra to create a costs matrix."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:20
msgid ""
":ref:`pgr_drivingDistance` - Use pgr_dijkstra to calculate catchament "
"information."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:21
msgid ""
":ref:`pgr_ksp` - Use Yen algorithm with pgr_dijkstra to get the K shortest "
"paths."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:22
msgid ":ref:`pgr_dijkstraVia` - Get a route of a seuence of vertices."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:39
msgid "The problem definition (Advanced documentation)"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:42
msgid "Given the following query:"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:45
msgid "pgr_dijkstra(:math:`sql, start_{vid}, end_{vid}, directed`)"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:47
msgid ""
"where  :math:`sql = \\{(id_i, source_i, target_i, cost_i, "
"reverse\\_cost_i)\\}`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:49
msgid "and"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:51
msgid ":math:`source = \\bigcup source_i`,"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:52
msgid ":math:`target = \\bigcup target_i`,"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:54
msgid "The graphs are defined as follows:"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:57
msgid "Directed graph"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:58
msgid "The weighted directed graph, :math:`G_d(V,E)`, is definied by:"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:60
#: ../../build/doc/dijkstra-family.rst:79
msgid "the set of vertices  :math:`V`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:62
msgid ":math:`V = source \\cup target \\cup {start_{vid}} \\cup  {end_{vid}}`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:64
#: ../../build/doc/dijkstra-family.rst:84
msgid "the set of edges :math:`E`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:66
msgid ""
":math:`E = \\begin{cases} \\text{ }  \\{(source_i, target_i, cost_i) \\text{"
" when } cost >=0 \\} & \\quad \\text{if } reverse\\_cost = \\varnothing \\\\"
" \\text{ }  \\text{ }  & \\quad \\text{ } \\\\ \\text{ }  \\{(source_i, "
"target_i, cost_i) \\text{ when } cost >=0 \\} &  \\quad \\text{ } \\\\ \\cup"
"      \\{(target_i, source_i, reverse\\_cost_i) \\text{ when } "
"reverse\\_cost_i>=0 \\} & \\quad \\text{if } reverse\\_cost \\neq "
"\\varnothing \\\\ \\end{cases}`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:76
msgid "Undirected graph"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:77
msgid "The weighted undirected graph, :math:`G_u(V,E)`, is definied by:"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:81
msgid ":math:`V = source \\cup target \\cup {start_v{vid}} \\cup  {end_{vid}}`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:86
msgid ""
":math:`E = \\begin{cases} \\text{ }  \\{(source_i, target_i, cost_i) \\text{"
" when } cost >=0 \\}  & \\quad \\text{ } \\\\ \\cup      \\{(target_i, "
"source_i, cost_i) \\text{ when } cost >=0 \\}  & \\quad \\text{ if } "
"reverse\\_cost = \\varnothing \\\\ \\text{ }  \\text{ }  & \\text{ } \\\\ "
"\\text{ }  \\{(source_i, target_i, cost_i) \\text{ when } cost >=0 \\} & "
"\\text{ } \\\\ \\cup  \\{(target_i, source_i, cost_i) \\text{ when } cost "
">=0 \\} & \\text{ } \\\\ \\cup  \\{(target_i, source_i, reverse\\_cost_i) "
"\\text{ when } reverse\\_cost_i >=0)\\} & \\text{ } \\\\ \\cup  "
"\\{(source_i, target_i, reverse\\_cost_i) \\text{ when } reverse\\_cost_i "
">=0)\\} & \\quad \\text{ if } reverse\\_cost \\neq \\varnothing \\\\ "
"\\end{cases}`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:99
msgid "The problem"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:100
msgid "Given:"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:102
msgid ":math:`start_{vid} \\in V` a starting vertex"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:103
msgid ":math:`end_{vid} \\in V` an ending vertex"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:104
msgid ""
":math:`G(V,E) = \\begin{cases} G_d(V,E) & \\quad \\text{ if6 } directed = "
"true \\\\ G_u(V,E) & \\quad \\text{ if5 } directed = false \\\\ "
"\\end{cases}`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:109
msgid "Then:"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:118
msgid ""
":math:`\\boldsymbol{\\pi} = \\{(path\\_seq_i, node_i, edge_i, cost_i, "
"agg\\_cost_i)\\}`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:131
msgid "where:"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:121
msgid ":math:`path\\_seq_i = i`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:122
msgid ":math:`path\\_seq_{| \\pi |} = | \\pi |`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:123
msgid ":math:`node_i \\in V`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:124
msgid ":math:`node_1 = start_{vid}`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:125
msgid ":math:`node_{| \\pi |}  = end_{vid}`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:126
msgid ":math:`\\forall i \\neq | \\pi |, \\quad (node_i, node_{i+1}, cost_i) \\in E`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:127
msgid ""
":math:`edge_i  = \\begin{cases}  id_{(node_i, node_{i+1},cost_i)}  &\\quad  "
"\\text{when } i \\neq | \\pi | \\\\ -1 &\\quad  \\text{when } i = | \\pi | "
"\\\\ \\end{cases}`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:128
msgid ":math:`cost_i = cost_{(node_i, node_{i+1})}`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:129
msgid ""
":math:`agg\\_cost_i  = \\begin{cases}  0   &\\quad  \\text{when } i = 1  "
"\\\\ \\displaystyle\\sum_{k=1}^{i}  cost_{(node_{k-1}, node_k)}  &\\quad  "
"\\text{when } i \\neq 1 \\\\ \\end{cases}`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:137
msgid ""
"In other words: The algorithm returns a the shortest path between "
":math:`start_{vid}` and :math:`end_{vid}` , if it exists, in terms of a "
"sequence of nodes  and of edges,"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:134
msgid ""
":math:`path\\_seq` indicates the relative position in the path of the "
":math:`node` or :math:`edge`."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:135
msgid ""
":math:`cost` is the cost of the edge to be used to go to the next node."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:136
msgid ""
":math:`agg\\_cost` is the cost from the :math:`start_{vid}` up to the node."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:139
msgid "If there is no path, the resulting set is empty."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:143
msgid "See Also"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:146
msgid "Indices and tables"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:147
msgid ":ref:`genindex`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:148
msgid ":ref:`search`"
msgstr ""
